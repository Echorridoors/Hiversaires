Carefully migrate node_old references
    Clean up these methods, in perhaps this order
    Check templateUpdateNode for relevant fade-ins
    
    templateEntenteTerminal
    templateEntente
    templateEntentePart1Incr
    templateEntentePart1Decr
    templateEntentePart2Incr
    templateEntentePart2Decr
    templateEntentePart2Exit
    templateSealDoor
    templateSealUpdate
    templateUpdateStudioTerminal
    actionTemplate

Make walkThroughDoor data-driven
    A door is a puzzle with a condition, a secret and one or two nodeIDs

Fill in the weird SVG gaps

Create puzzle object
    A puzzle has a state (loaded/saved) and a performAction() method
    Actions are dictated by puzzles. setCurrentAction should be made into a getter that discovers the action of a puzzle subject
    There should be a puzzle subclass for every puzzle type
    Templates should go into their corresponding puzzles
Create billboard object
Create trigger object

Organize puzzles by type and nodes by zone
    There's no reason their IDs are integers

A puzzle should be able to report all the different assets that might be needed for it
    Then we can load it preemptively

Convert the world to a displayable graph, if you can
Full walkthrough

Convert layout and ghost CSS to use vw and vh in calc
Convert layout and ghost CSS to data-driven styles
    Bring back setBounds
    Store illusion bounds in data.js

Once you show IOOâ ›, fold their new stuff into the build
    https://www.youtube.com/watch?v=j9KDQoznJwE

    Thoughts on the interview
        Chill driving after a long day
            Drivey
                What not to do, if you want a project to last

Allow limited resizing
    iPads cropped the background and scaled the layout

Bug someone about using import/export es6 syntax
